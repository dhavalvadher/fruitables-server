openapi: 3.0.0
info:
  title: Fruitables API
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
  version: 0.1.9
servers:
  - url: http://localhost:9000/api/v1
    description: Optional server description, e.g. Main (production) server
  - url: http://example.com
    description: Optional server description, e.g. Internal staging server for testing
components:
  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []
paths:
  /users/useradd:
    post:
      summary: users register.
      description: Optional extended description in CommonMark or HTML.
      tags:
        - users
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                role:
                  type: string
                avtar:
                  type: string
                  format: binary
      responses:
        "200": # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /users/login:
    post:
      summary: login succsesfully.
      description: Optional extended description in CommonMark or HTML.
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        "200": # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /users/logout:
    post:
      summary: user logout.
      description: Optional extended description in CommonMark or HTML.
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                _id:
                  type: string
      responses:
        "200": # status code
          description: A JSON array of user names  generateAuthToken
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /users/get-newtoken:
    post:
      summary: user generate Token.
      description: Optional extended description in CommonMark or HTML.
      tags:
        - users
      responses:
        "200": # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /users/googleLogin:
    get:
      summary: Please move to browser.
      description: Optional extended description in CommonMark or HTML.
      tags:
        - users
      responses:
        "200": # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /categories/list_categories:
    get:
      summary: Please move to browser.
      description: Optional extended description in CommonMark or HTML.
      tags:
        - categories
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: page no
        - in: query
          name: pageSize
          schema:
            type: integer
          description: page size
      responses:
        "200": # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /categories/update_categories/{category_id}:
    put:
      summary: categories.
      description: Optional extended description in CommonMark or HTML.
      tags:
        - categories
      parameters:
        - in: path
          name: category_id
          schema:
            type: string
          required: true
          description: Update category
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
      responses:
        "200": # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /categories/post_categories:
    post:
      summary: Add .
      description: Optional extended description in CommonMark or HTML.
      tags:
        - categories
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
      responses:
        "200": # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /categories/delete_categories/{category_id}:
    delete:
      summary: delete .
      description: Optional extended description in CommonMark or HTML.
      tags:
        - categories
      parameters:
        - in: path
          name: category_id
          schema:
            type: string
          required: true
          description: delete category.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category_id:
                  type: string
      responses:
        "200": # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /categories/getActive:
    get:
      summary: total count of active subcategories.
      description: Retrieves the number of categories that are currently active in the system.
      tags:
        - categories
      responses:
        "200":
          description: The count of active categories.
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: The number of active categories.
        "500":
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message explaining the issue.
  /categories/getInactive:
    get:
      summary: Returns a count of active categories.
      description: Retrieves the number of categories that are currently active in the system.
      tags:
        - categories
      responses:
        "200":
          description: The count of inactive categories.
          content:
            application/json:
              schema:
                type: object
                properties:
                  match:
                    type: integer
                    description: The number of active categories.
  /categories/most-products:
    get:
      summary: categories with the highest number of products..
      description: Retrieves the number of categories that are currently active in the system.
      tags:
        - categories
      responses:
        "200":
          description: categories with the highest number of products.
          content:
            application/json:
              schema:
                type: object
  /categories/count-subcategories:
    get:
      summary: total count of active categories.
      description: Retrieves the number of categories that are currently active in the system.
      tags:
        - categories
      responses:
        "200":
          description: total count of active categories.
          content:
            application/json:
              schema:
                type: object
  /categories/category-subcategory/{category_id}:
    get:
      summary: subcategory in a specific category.
      description: Retrieves the number of categories that are currently active in the system.
      tags:
        - categories
      parameters:
        - in: path
          name: category_id
          schema:
            type: string
      responses:
        "200":
          description: subcategory in a specific category
          content:
            application/json:
              schema:
                type: object
                properties:
                  category_id:
                    type: string
                    description: The number of active categories.
  /categories/specific/{category_id}:
    get:
      parameters:
        - in: path
          name: category_id
          schema:
            type: string
          required: true
          description: get category.
      summary: get category.
      description: Optional extended description in CommonMark or HTML.
      tags:
        - categories
      responses:
        "200": # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /categories/average-products:
    get:
      summary: Returns a count of active categories.
      description: Retrieves the number of categories that are currently active in the system.
      tags:
        - categories
      responses:
        "200":
          description: average number of products per category.
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: The number of active categories.
  /subcategories/update-subcategory/{subcategory_id}:
    put:
      parameters:
        - in: path
          name: subcategory_id
          required: true
          schema:
            type: string
            minimum: 1
            required: true
          description: subcategory id
      summary: user categories update.
      description: Optional extended description in CommonMark or HTML.
      tags:
        - subcategories
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                discription:
                  type: string
      responses:
        "200": # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /subcategories/create-subcategory:
    post:
      summary: Add .
      description: Optional extended description in CommonMark or HTML.
      tags:
        - subcategories
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
      responses:
        "200": # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /subcategories/delete-subcategory/{subcategory_id}:
    delete:
      summary: delete .
      description: Optional extended description in CommonMark or HTML.
      tags:
        - subcategories
      parameters:
        - in: path
          name: subcategory_id
          schema:
            type: string
          required: true
          description: delete .
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                subcategory_id:
                  type: string
      responses:
        "200": # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /subcategories/list-subcategories:
    get:
      summary: list subcategories.
      description: Optional extended description in CommonMark or HTML.
      tags:
        - subcategories
      responses:
        "200": # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /subcategories/get-subcategories/{subcategory_id}:
    get:
      parameters:
        - in: path
          name: subcategory_id
          schema:
            type: string
          required: true
          description: get subcategories.
      summary: get subcategories.
      description: Optional extended description in CommonMark or HTML.
      tags:
        - subcategories
      responses:
        "200": # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /subcategories/count-products:
    get:
      summary: count of products for each subcategory.
      description: Retrieves the number of categories that are currently active in the system.
      tags:
        - subcategories
      responses:
        "200":
          description: count of products for each subcategory.
          content:
            application/json:
              schema:
                type: object
  /subcategories/parent-of-subcategory/{category_id}:
    get:
      parameters:
        - in: path
          name: category_id
          schema:
            type: string
          required: true
          description: parent-of-subcategory
      summary: parent-of-subcategory
      description: Optional extended description in CommonMark or HTML.
      tags:
        - subcategories
      responses:
        "200": # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /subcategories/most-products:
    get:
      summary: subcategories with the highest number of products.
      description: Retrieves the number of categories that are currently active in the system.
      tags:
        - subcategories
      responses:
        "200":
          description: subcategories with the highest number of products.
          content:
            application/json:
              schema:
                type: object
  /subcategories/count-active:
    get:
      summary: total count of active subcategories.
      description: Retrieves the number of categories that are currently active in the system.
      tags:
        - subcategories
      responses:
        "200":
          description: total count of active subcategories.
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: The number of active categories.
  /subcategories/inactive:
    get:
      summary: list of inactive subcategories.
      description: Retrieves the number of categories that are currently active in the system.
      tags:
        - subcategories
      responses:
        "200":
          description: list of inactive subcategories.
          content:
            application/json:
              schema:
                type: object
                properties:
                  match:
                    type: integer
                    description: The number of active categories.
  /products/update-product/{product_id}:
    put:
      parameters:
        - in: path
          name: product_id
          required: true
          schema:
            type: string
            minimum: 1
            required: true
            description: product_id
      summary: user categories update.
      description: Optional extended description in CommonMark or HTML.
      tags:
        - products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                discription:
                  type: string
      responses:
        "200": # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /products/create-product:
    post:
      summary: Add product.
      description: Optional extended description in CommonMark or HTML.
      tags:
        - products
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                category_id:
                  type: string
                subcategory_id:
                  type: string
                name:
                  type: string
                description:
                  type: string
                price:
                  type: string
                stock:
                  type: string
                product_image:
                  type: string
                  format: binary
      responses:
        "200": # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /products/delete-product/{product_id}:
    delete:
      summary: delete .
      description: Optional extended description in CommonMark or HTML.
      tags:
        - products
      parameters:
        - in: path
          name: product_id
          schema:
            type: string
          required: true
          description: delete category.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category_id:
                  type: string
      responses:
        "200": # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /products/list-products:
    get:
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: pageSize
          schema:
            type: integer
          description: The numbers of items to return
      summary: list products.
      description: Optional extended description in CommonMark or HTML.
      tags:
        - products
      responses:
        "200": # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /products/get-product/{product_id}:
    get:
      parameters:
        - in: path
          name: product_id
          schema:
            type: string
          required: true
          description: get products.
      summary: get products.
      description: Optional extended description in CommonMark or HTML.
      tags:
        - products
      responses:
        "200": # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /products/search-productes:
    get:
      summary: Search Productes
      description: Retrieve a list of Productes based on query parameters.
      tags:
        - products
      parameters:
        - in: query
          name: sortOrder
          schema:
            type: string
            enum: [asc, desc]
          description: The sort order of the products.
        - in: query
          name: rating
          schema:
            type: integer
            format: int32
          description: Minimum average rating of the products.
        - in: query
          name: max
          schema:
            type: number
            format: float
          description: Maximum price of the products.
        - in: query
          name: min
          schema:
            type: number
            format: float
          description: Minimum price of the products.
        - in: query
          name: category
          schema:
            type: integer
            format: int32
          description: Category ID to filter the products.
        - in: query
          name: page
          schema:
            type: integer
            format: int32
          description: Page number for pagination.
        - in: query
          name: limit
          schema:
            type: integer
            format: int32
          description: Number of products per page.
      responses:
        "200":
          description: Productes successfully fetched.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        name:
                          type: string
                        variants:
                          type: array
                          items:
                            type: object
                        reviews:
                          type: array
                          items:
                            type: object
  /products/count-categories:
    get:
      summary: count of products for each category.
      description: Retrieves the number of categories that are currently active in the system.
      tags:
        - products
      responses:
        "200":
          description: count of products for each category.
          content:
            application/json:
              schema:
                type: object
  /products/productByCategory/{category_id}:
    get:
      summary: get products.
      description: Optional extended description in CommonMark or HTML.
      tags:
        - products
      parameters:
        - in: path
          name: category_id
          schema:
            type: string
          required: true
          description: category.
      responses:
        "200": # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /products/get-ProductBySubcategory/{subcategory_id}:
    get:
      summary: get products.
      description: Optional extended description in CommonMark or HTML.
      tags:
        - products
      parameters:
        - in: path
          name: subcategory_id
          schema:
            type: string
          required: true
          description: subcategory_id.
      responses:
        "200": # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /products/top-rated:
    get:
      summary: recently added products.
      description: Retrieves the number of categories that are currently active in the system.
      tags:
        - products
      responses:
        "200":
          description: recently added products.
          content:
            application/json:
              schema:
                type: object
  /products/new-arrivals:
    get:
      summary: recently added products.
      description: Retrieves the number of categories that are currently active in the system.
      tags:
        - products
      responses:
        "200":
          description: recently added products.
          content:
            application/json:
              schema:
                type: object
  /products/out-of-stock:
    get:
      summary: recently added products.
      description: Retrieves the number of categories that are currently active in the system.
      tags:
        - products
      responses:
        "200":
          description: out-of-stock.
          content:
            application/json:
              schema:
                type: object
  /products/variant-details/{product_id}:
    get:
      parameters:
        - in: path
          name: product_id
          schema:
            type: string
          required: true
          description: variant_details.
      summary: get products.
      description: Optional extended description in CommonMark or HTML.
      tags:
        - products
      responses:
        "200": # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /variants/list-variants:
    get:
      summary: list variants.
      description: Optional extended description in CommonMark or HTML.
      tags:
        - variants
      responses:
        "200": # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /variants/add-variant:
    post:
      summary: Add variants.
      description: Optional extended description in CommonMark or HTML.
      tags:
        - variants
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                category_id:
                  type: string
                subcategory_id:
                  type: string
                product_id:
                  type: string
                name:
                  type: string
                price:
                  type: string
                stock:
                  type: string
                discount:
                  type: string
                variant_image:
                  type: string
                  format: binary
      responses:
        "200": # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /variants/update-variant/{variant_id}:
    put:
      summary: update variants.
      description: Optional extended description in CommonMark or HTML.
      tags:
        - variants
      parameters:
        - in: path
          name: variant_id
          schema:
            type: string
          required: true
          description: Update variants.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                price:
                  type: string
                stock:
                  type: string
                discount:
                  type: string
                variant_image:
                  type: string
                  format: binary
      responses:
        "200": # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /variants/delete-variant/{variant_id}:
    delete:
      summary: delete variants.
      description: Optional extended description in CommonMark or HTML.
      tags:
        - variants
      parameters:
        - in: path
          name: variant_id
          schema:
            type: string
          required: true
          description: delete variants.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                variant_id:
                  type: string
      responses:
        "200": # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /variants/get-variant/{variant_id}:
    get:
      parameters:
        - in: path
          name: variant_id
          schema:
            type: string
          required: true
          description: get variants.
      summary: get products.
      description: Optional extended description in CommonMark or HTML.
      tags:
        - variants
      responses:
        "200": # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /variants/count-stock/{variant_id}:
    get:
      parameters:
        - in: path
          name: variant_id
          schema:
            type: string
          required: true
          description: get variants.
      summary: get products.
      description: Optional extended description in CommonMark or HTML.
      tags:
        - variants
      responses:
        "200": # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /variants/active:
    get:
      summary: total count of active variants.
      description: Retrieves the number of categories that are currently active in the system.
      tags:
        - variants
      responses:
        "200":
          description: The count of active variants.
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: The number of active variants.
  /variants/count-products:
    get:
      summary: total count of active variants.
      description: Retrieves the number of categories that are currently active in the system.
      tags:
        - variants
      responses:
        "200":
          description: count-products
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: count-products
  /variants/particular-variant/{product_id}:
    get:
      parameters:
        - in: path
          name: product_id # Note the name is the same as in the path
          required: true
          schema:
            type: string
      summary: Variants.
      description: Optional extended description in CommonMark or HTML.
      tags:
        - variants
      responses:
        "200": # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /variants/list-variant/{product_id}:
    get:
      parameters:
        - in: path
          name: product_id
          schema:
            type: string
          required: true
          description: get variants.
      summary: get products.
      description: Optional extended description in CommonMark or HTML.
      tags:
        - variants
      responses:
        "200": # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /variants/low-quantity:
    get:
      summary: total count of active variants.
      description: Retrieves the number of categories that are currently active in the system.
      tags:
        - variants
      responses:
        "200":
          description: The count of active variants.
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: The number of active variants.
  /variants/high-price:
    get:
      summary: total count of active variants.
      description: Retrieves the number of categories that are currently active in the system.
      tags:
        - variants
      responses:
        "200":
          description: The count of active variants.
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: The number of active variants.
  /variants/multiple-variants:
    get:
      summary: total count of active variants.
      description: Retrieves the number of categories that are currently active in the system.
      tags:
        - variants
      responses:
        "200":
          description: products with more than one variant.
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: products with more than one variant.
  /salespeople/update-salesperson/{snum}:
    put:
      parameters:
        - in: path
          name: snum
          required: true
          schema:
            type: string
            minimum: 1
            required: true
            description: snum
      summary: user  update.
      description: Optional extended description in CommonMark or HTML.
      tags:
        - salespeople
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                discription:
                  type: string
      responses:
        "200": # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /salespeople/add-salespeople:
    post:
      summary: Add .
      description: Optional extended description in CommonMark or HTML.
      tags:
        - salespeople
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
      responses:
        "200": # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /salespeople/delete-salesperson/{snum}:
    delete:
      summary: delete .
      description: Optional extended description in CommonMark or HTML.
      tags:
        - salespeople
      parameters:
        - in: path
          name: snum
          schema:
            type: string
          required: true
          description: delete .
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category_id:
                  type: string
      responses:
        "200": # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /salespeople/get-salespeople:
    get:
      summary: get .
      description: Optional extended description in CommonMark or HTML.
      tags:
        - salespeople
      parameters:
        - in: path
          name: sum
          schema:
            type: string
          required: true
          description: get .
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category_id:
                  type: string
      responses:
        "200": # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /payments/list-payment:
    get:
      summary: list payment.
      description: Optional extended description in CommonMark or HTML.
      tags:
        - payments
      responses:
        "200": # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /payments/get-payment/{payment_id}:
    get:
      parameters:
        - in: path
          name: payment_id
          schema:
            type: string
          required: true
          description: get payments.
      summary: get payments.
      description: Optional extended description in CommonMark or HTML.
      tags:
        - payments
      responses:
        "200": # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /payments/create-payment:
    post:
      summary: create-payment.
      description: Optional extended description in CommonMark or HTML.
      tags:
        - payments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order_id:
                  type: string
                type:
                  type: string
                status:
                  type: string
      responses:
        "200": # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /payments/order/{order_id}:
    get:
      parameters:
        - in: path
          name: order_id
          schema:
            type: string
          required: true
          description: get orders.
      summary: get orders.
      description: Optional extended description in CommonMark or HTML.
      tags:
        - payments
      responses:
        "200": # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /payments/delete-payment/{payment_id}:
    delete:
      summary: delete payment.
      description: Optional extended description in CommonMark or HTML.
      tags:
        - payments
      parameters:
        - in: path
          name: payment_id
          schema:
            type: string
          required: true
          description: delete payment.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                payment_id:
                  type: string
      responses:
        "200": # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /payments/update-payment/{payment_id}:
    put:
      summary: Update a ordpaymentser
      description: Update the review based on the provided review ID and request body.
      tags:
        - payments
      parameters:
        - in: path
          name: payment_id
          required: true
          schema:
            type: string
          description: The ID of the payments to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                status:
                  type: string
      responses:
        "200":
          description: Review successfully updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
  /reviews/list-review:
    get:
      summary: List Reviews.
      description: Optional extended description in CommonMark or HTML.
      tags:
      - Reviews
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string
  /reviews/get-review/{reviews_id}:
    get:
      parameters:
        - in: path
          name: reviews_id   # Note the name is the same as in the path
          required: true
          schema:
            type: string
            minimum: 1
          description: reviews_id
      summary: List Reviews.
      description: Optional extended description in CommonMark or HTML.
      tags:
      - Reviews
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string
  /reviews/create-review:
    post:
      summary: Add Reviews.
      description: Optional extended description in CommonMark or HTML.
      tags:
      - Reviews
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_id:
                  type: string
                user_id:
                  type: string
                rating:
                  type: string
                review:
                  type: string
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string
  /reviews/update-review/{reviews_id}:
    put:
      parameters:
        - in: path
          name: reviews_id   # Note the name is the same as in the path
          required: true
          schema:
            type: string
            minimum: 1
          description: reviews_id
      summary: Update reviews.
      description: Optional extended description in CommonMark or HTML.
      tags:
      - Reviews
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_id:
                  type: string
                user_id:
                  type: string
                rating:
                  type: string
                review:
                  type: string
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string
  /reviews/delete-review/{reviews_id}:
    delete:
      parameters:
        - in: path
          name: reviews_id   # Note the name is the same as in the path
          required: true
          schema:
            type: string
      summary: Delete Reviews.
      description: Optional extended description in CommonMark or HTML.
      tags:
      - Reviews
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string 
  /reviews/approveAndreject/{status}/{reviews_id}:
    get:
      parameters:
        - in: path
          name: status
          schema:
            type: string
          enum: [approve, disapprove] 
          required: true
          description: Approve or disapprove the review. Use 'approve' to approve, 'disapprove' to disapprove.
        - in: path
          name: reviews_id
          schema:
            type: string
          required: true
          description: ID of the review to approve or disapprove.
      summary: Approve or disapprove a review.
      description: Approve or disapprove a review based on the status parameter.
      tags:
        - Reviews
      responses:
        '200':    # status code
          description: Review status updated successfully.
          content:
            application/json:
              schema: 
                type: object
              properties:
                success:
                  type: boolean
                  description: Indicates if the operation was successful.
                message:
                  type: string
                  description: A message describing the result.
                data:
                  type: object
                  description: Data containing information about the operation.
  /reviews/user/{user_id}:
    get:
      parameters:
        - in: path
          name: user_id   # Note the name is the same as in the path
          required: true
          schema:
            type: string
            minimum: 1
          description: user_id
      summary: List Reviews.
      description: Optional extended description in CommonMark or HTML.
      tags:
      - Reviews
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string
  /reviews/product/{product_id}:
    get:
      parameters:
        - in: path
          name: product_id   # Note the name is the same as in the path
          required: true
          schema:
            type: string
            minimum: 1
          description: product_id
      summary: List Product.
      description: Optional extended description in CommonMark or HTML.
      tags:
      - Reviews
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string 
  /reviews/top-rated-products:
    get:
      summary: List TopRate Reviews.
      description: Optional extended description in CommonMark or HTML.
      tags:
      - Reviews
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string
  /reviews/with-comments:
    get:
      summary: with comments Reviews.
      description: Optional extended description in CommonMark or HTML.
      tags:
      - Reviews
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string
  /reviews/count-products:
    get:
      summary: count product of Reviews.
      description: Optional extended description in CommonMark or HTML.
      tags:
      - Reviews
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string
  /orders/list-order:
    get:
      summary: get .
      description: Optional extended description in CommonMark or HTML.
      tags:
        - orders
      responses:
        "200": # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /orders/update-order/{order_id}:
    put:
      summary: Update a order
      description: Update the review based on the provided review ID and request body.
      tags:
        - orders
      parameters:
        - in: path
          name: order_id
          required: true
          schema:
            type: string
          description: The ID of the order to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                payment_method:
                  type: string
                payment_status:
                  type: string
                total_price:
                  type: string
      responses:
        "200":
          description: Review successfully updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
  /orders/delete-order/{order_id}:
    delete:
      summary: delete orders.
      description: Optional extended description in CommonMark or HTML.
      tags:
        - orders
      parameters:
        - in: path
          name: order_id
          schema:
            type: string
          required: true
          description: delete orders.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order_id:
                  type: string
      responses:
        "200": # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /orders/user/{user_id}:
    get:
      parameters:
        - in: path
          name: user_id   # Note the name is the same as in the path
          required: true
          schema:
            type: string
            minimum: 1
          description: user_id
      summary: List user Orders.
      description: Optional extended description in CommonMark or HTML.
      tags:
      - orders
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string
  /orders/seller/{user_id}:
    get:
      parameters:
        - in: path
          name: user_id   # Note the name is the same as in the path
          required: true
          schema:
            type: string
            minimum: 1
          description: user_id
      summary: List sellar Orders.
      description: Optional extended description in CommonMark or HTML.
      tags:
      - orders
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string
  /orders/product/{product_id}:
    get:
      parameters:
        - in: path
          name: product_id   # Note the name is the same as in the path
          required: true
          schema:
            type: string
            minimum: 1
          description: product_id
      summary: List product Orders.
      description: Optional extended description in CommonMark or HTML.
      tags:
      - orders
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string
  /orders/cancel:
    get:
      summary: List cancle Orders.
      description: Optional extended description in CommonMark or HTML.
      tags:
      - orders
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string
  /orders/place-order:
    post:
      summary: Add Order.
      description: Optional extended description in CommonMark or HTML.
      tags:
      - orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                payment_id:
                  type: string
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      product_id:
                        type: string
                        format: objectid
                      qty:
                        type: number
                        default: 0
                shipping_address:
                  type: string
                amount:
                  type: number
                status:
                  type: string
                discount:
                  type: number
                  default: 0
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string
  /carts/get-cart/{cart_id}:
    get:
      parameters:
        - in: path
          name: cart_id
          schema:
            type: string
          required: true
          description: get carts.
      summary: get carts.
      description: Optional extended description in CommonMark or HTML.
      tags:
        - carts
      responses:
        "200": # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /carts/add-cart:
    post:
      summary: Add a new cart
      description: Add a new cart with essential details including items.
      tags:
        - carts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  format: objectid
                  description: The ID of the user who owns the cart.
                isActive:
                  type: boolean
                  description: Indicates whether the cart is active or not.
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      product_id:
                        type: string
                        format: objectid
                        description: The ID of the product in the cart.
                      quantity:
                        type: number
                        default: 1
                        description: The quantity of the product.
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                    format: objectid
                    description: The ID of the created cart.
                  user_id:
                    type: string
                    format: objectid
                    description: The ID of the user who owns the cart.
                  isActive:
                    type: boolean
                    description: Indicates whether the cart is active or not.
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        product_id:
                          type: string
                          format: objectid
                          description: The ID of the product in the cart.
                        quntity:
                          type: number
                          default: 1
                          description: The quantity of the product.
  /carts/update-cart/{cart_id}:
    put:
      summary: Update an existing cart
      description: Update details of an existing cart by its ID.
      tags:
        - carts
      parameters:
        - name: cart_id
          in: path
          required: true
          schema:
            type: string
            format: objectid
          description: The ID of the cart to update.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  format: objectid
                  description: The ID of the user who owns the cart.
                isActive:
                  type: boolean
                  description: Indicates whether the cart is active or not.
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      product_id:
                        type: string
                        format: objectid
                        description: The ID of the product in the cart.
                      quntity:
                        type: number
                        description: The quantity of the product.
      responses:
        "200":
          description: Updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                    format: objectid
                    description: The ID of the updated cart.
                  user_id:
                    type: string
                    format: objectid
                    description: The ID of the user who owns the cart.
                  isActive:
                    type: boolean
                    description: Indicates whether the cart is active or not.
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        product_id:
                          type: string
                          format: objectid
                          description: The ID of the product in the cart.
                        quntity:
                          type: number
                          description: The quantity of the product.
  /carts/delete-cart/{cart_id}/{product_id}:
    delete:
      summary: Delete a product from a cart
      description: Removes a specific product from the cart.
      tags:
        - carts
      parameters:
        - in: path
          name: cart_id
          schema:
            type: string
            format: objectid
          required: true
          description: The ID of the cart to update.
        - in: path
          name: product_id
          schema:
            type: string
            format: objectid
          required: true
          description: The ID of the product to remove.
      responses:
        "200":
          description: Product removed from cart successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                        format: objectid
                      users_id:
                        type: string
                        format: objectid
                      items:
                        type: array
                        items:
                          type: object
                          properties:
                            product_id:
                              type: string
                              format: objectid
                            quantity:
                              type: number
                      isActive:
                        type: boolean
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
        "404":
          description: Cart or product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
